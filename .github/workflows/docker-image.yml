name: Docker Image CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      #- name: Login to DockerHub
      #  uses: docker/login-action@v1 
      #  with:
      #    username: ${{ secrets.DOCKERHUB_USERNAME }}
      #    password: ${{ secrets.DOCKERHUB_TOKEN }}
    #- uses: actions/checkout@v2
    #- name: Build the Docker image
    #  run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Bauen und Pushen
        uses: docker/build-push-action@v2
        with:
          #username: ${{ github.actor }}
          #password: ${{ secrets.GITHUB_TOKEN }}
          #registry: docker.pkg.github.com
          #repository: my-org/my-repo/my-image
          #tag_with_ref: true
          
          context: .
          platforms: linux/arm/v7
          push: true
          tags: caprico85/my-node-red:latest

    #- name: Set up Docker Buildx      
    #  uses: crazy-max/ghaction-docker-buildx@v1      
    #  with:        
    #    version: latest    
    #- name: Prepare      
    #  if: success()      
    #  id: prepare      
    #  run: |        
    #    echo ::set-output name=docker_platform::${DOCKER_TARGET_PLATFORM}        
    #    echo ::set-output name=docker_image::${DOCKER_REGISTRY}/${DOCKER_IMAGE}        
    #    echo ::set-output name=version::${GITHUB_RUN_NUMBER}    
    #- name: Docker Login      
    #  if: success()      
    #  run: |        
    #    echo "${DOCKER_PASSWORD}" | docker login ${DOCKER_REGISTRY} --username "${DOCKER_USERNAME}" --password-stdin          
    #- name: Run Buildx (push image)      
    #  if: success()      
    #  run: |        
    #    docker buildx build \        --platform ${{ steps.prepare.outputs.docker_platform }} \        --tag ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }} \        --file ./Dockerfile \        --output type=image,push=true .
